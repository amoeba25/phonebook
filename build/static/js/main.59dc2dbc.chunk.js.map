{"version":3,"sources":["components/DeleteBtn.js","components/Contact.js","components/Person.js","components/Input.js","services/contact.js","components/Success.js","components/Failure.js","App.js","index.js"],"names":["DeleteBtn","onDelete","onClick","Contact","id","name","phone","url","window","confirm","axios","delete","deleteNote","Person","persons","filterQuery","map","person","filtered","filter","obj","toLowerCase","includes","Input","label","value","onChange","baseUrl","helper","getAll","get","create","newObject","post","update","put","Success","message","className","Failure","Heading","heading","App","useState","setPersons","newName","setNewName","newPhone","setNewPhone","newFilter","setNewFilter","successMessage","setSuccessMessage","failureMessage","setFailuresMessage","useEffect","contactService","then","response","data","event","target","onSubmit","preventDefault","some","match","find","p","changedPerson","setTimeout","catch","error","nameObject","concat","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59dc2dbc.chunk.js","sourcesContent":["\r\n\r\n\r\nconst DeleteBtn = ({onDelete}) => {\r\n    return (\r\n      <button onClick={onDelete}>\r\n        delete\r\n      </button>\r\n    )\r\n}\r\n\r\nexport default DeleteBtn;","import axios from 'axios';\r\nimport React from 'react'\r\nimport DeleteBtn from './DeleteBtn'\r\n\r\n\r\n//deleting a note\r\nconst deleteNote = (id, name) => {\r\n  const url= `http://localhost:3001/persons/${id}`;\r\n\r\n  window.confirm(`Delete ${name}?`)\r\n  axios.delete(url);\r\n}\r\n\r\nconst Contact = ({id, name, phone}) => {\r\n    return (\r\n      <li>{name}: {phone} <DeleteBtn onDelete={() => deleteNote(id, name)}/> </li>\r\n    )\r\n  }\r\n\r\nexport default Contact;","import React from 'react'\r\nimport Contact from './Contact'\r\n\r\n\r\nconst Person = ({persons, filterQuery}) => {\r\n  \r\n  if(filterQuery === '') {\r\n    return (<ul>\r\n      {persons.map(person => \r\n        <Contact name= {person.name} key={person.name} phone={person.phone} id={person.id}/> \r\n      )}\r\n    </ul>)\r\n  }\r\n  else{\r\n    let filtered = persons.filter(obj => obj.name.toLowerCase().includes(filterQuery.toLowerCase()))\r\n    \r\n    return (<ul>\r\n      {filtered.map(person => \r\n        <Contact name= {person.name} key={person.id} phone={person.phone} id={person.id} />\r\n      )}\r\n    </ul>)\r\n  }\r\n \r\n \r\n}\r\n\r\n\r\nexport default Person;","import React from 'react'\r\n\r\nconst Input = ({label, value, onChange}) => {\r\n    return (\r\n      <div> {label}: <input \r\n                  value= {value}\r\n                  onChange={onChange}/>\r\n      </div> \r\n    )\r\n  }\r\n  \r\n\r\nexport default Input;","import axios from \"axios\";\r\nconst baseUrl = '/api/persons'; \r\n\r\n//fetching all contacts from the db\r\nconst getAll = () => {\r\n    return axios.get(baseUrl); \r\n}\r\n\r\n//adding a new contact to the db\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n} \r\n\r\nconst helper= {getAll, create, update};\r\n\r\nexport default helper;","const Success = ({message}) => {\r\n    if(message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className='success'>\r\n            {message}\r\n        </div>\r\n    )\r\n  }\r\n  \r\nexport default Success;","const Failure = ({message}) => {\r\n    if(message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className='failure'>\r\n            {message}\r\n        </div>\r\n    )\r\n  }\r\n  \r\nexport default Failure;","import React, { useState, useEffect} from 'react'\nimport Person from './components/Person'\nimport Input from './components/Input'\nimport contactService from './services/contact'\nimport Success from './components/Success'\nimport './App.css'\nimport Failure from './components/Failure'\n\n\nconst Heading = ({heading}) => {\n  return (\n    <h2>{heading}</h2>\n  )\n}\n\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newPhone, setNewPhone] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [successMessage, setSuccessMessage] = useState(null)\n  const [failureMessage, setFailuresMessage] = useState(null)\n  \n  useEffect(() => {\n    contactService.getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const addNumber = (event) => {\n    event.preventDefault(); \n\n\n    //check if the name already exists\n    if(persons.some(person => person.name === newName )){\n      window.confirm(`${newName} is already added to the phonebook, repalce the old number with the new number?`)\n\n      //getting the object which matches the name\n      const match = persons.find(p => p.name === newName); \n      const changedPerson = {...match, phone: newPhone}\n\n      //updating a name with a different number\n      contactService\n          .update(match.id, changedPerson)\n          .then(response => {\n            setPersons(persons.map(person => person.id !== match.id? person: response.data))\n            setNewName('')\n            setNewPhone('')\n\n            setSuccessMessage(`${response.data.name} has been changed!`)\n            setTimeout(\n              ()=> setSuccessMessage(null) \n            ,5000)\n          })\n          .catch(error => {\n            setNewName('')\n            setNewPhone('')\n            \n            setFailuresMessage(`${changedPerson.name} has been deleted!`)\n            setTimeout(\n              ()=> setFailuresMessage(null) \n            ,5000)\n\n          })\n      \n    }\n    else{\n\n      const nameObject = {\n        name: newName, \n        phone: newPhone\n      }\n      \n      contactService.create(nameObject)\n          .then(response => {\n            setPersons(persons.concat(response.data)); \n            setNewName('');\n            setNewPhone('');\n\n            setSuccessMessage(`${response.data.name} has been added!`)\n            setTimeout(\n              ()=> setSuccessMessage(null) \n            ,5000)\n          })\n      \n    }\n    \n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value); \n  }\n\n  \n  return (\n    <div>\n      <Heading heading= 'Phonebook'/>\n      <Success message={successMessage}/>\n      <Failure message={failureMessage} />\n      <Input label ='filter' value={newFilter} onChange={handleFilterChange} /> <br />\n\n      <Heading heading= 'Add a new'/>\n      <form onSubmit={addNumber}>\n       \n      <Input label ='Name' value={newName} onChange={handleNameChange} /> <br />\n      <Input label='Phone' value={newPhone} onChange={handlePhoneChange} /> <br />\n        \n      <div>\n        <button type=\"submit\" >add</button>\n      </div>\n      </form>\n      <Heading heading= 'Numbers'/>\n      <Person persons ={persons} filterQuery={newFilter} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}